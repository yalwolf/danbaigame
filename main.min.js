function rand(e, t, i) {
    return i ? e + Math.round(Math.random() * (t - e)) : e + Math.round(Math.random() * i) * (t - e) / i
}
var STATIC_NPC_BALL = 1,
DYNAMIC_NPC_BALL = 2,
CTRL_MAIN_BALL = 4,
Ball = function(e) {
    function t(t, i, a, s, n, o) {
        e.call(this),
        this.body_id = 0,
        this.inner2BoarderRate = 0 == a ? 0 : s / a,
        this.$r = s,
        this.bodyr = n || s,
        this.boarderColor = t,
        this.innerColor = i,
        this.cvtGrowth = o,
        this.updateDisplay(),
        this.cacheAsBitmap = !1
    }
    __extends(t, e);
    var i = __define,
    a = t;
    return p = a.prototype,
    p.setUniqueMark = function(e) {
        this.unique_mark = e
    },
    p.setBodyId = function(e) {
        this.body_id = e
    },
    p.getBodyId = function() {
        return this.body_id
    },
    p.changeDisplay = function() {
        var e = Main.config.colors[Math.floor(Math.random() * Main.config.colors.length)];
        this.boarderColor = e,
        this.innerColor = e,
        this.graphics.clear(),
        this.updateDisplay()
    },
    p.updateDisplay = function() {
        if (this.inner2BoarderRate > 0) {
            var e = Math.ceil(this.$r / this.inner2BoarderRate);
            this.graphics.lineStyle(e, this.boarderColor, 1),
            this.graphics.beginFill(this.innerColor, .8)
        } else this.graphics.beginFill(this.innerColor, 1);
        this.graphics.drawCircle(0, 0, this.$r),
        this.graphics.endFill()
    },
    p.contact = function() {},
    p.setPosition = function(e, t) {
        this.x = e,
        this.y = t
    },
    p.growUp = function(e) {
        this.graphics.clear(),
        this.bodyr *= e / this.$r,
        this.$r = e,
        this.updateDisplay()
    },
    p.growUpByInc = function(e) {
        this.graphics.clear(),
        this.$r += e,
        this.bodyr += e,
        this.updateDisplay()
    },
    i(p, "r",
    function() {
        return this.$r
    },
    function(e) {
        this.$r != e && (this.$r = e)
    }),
    p.setAnimate = function(e) {
        e.setTarget(this),
        this.animate = e
    },
    p.removeAnimate = function() {
        this.animate && (this.animate.remove(), this.animate = null)
    },
    t
} (egret.Sprite);
egret.registerClass(Ball, "Ball");
var CtrlBall = function(e) {
    function t(t, i) {
        e.call(this, t, t, 0, i, i, 0),
        this.showHoop = !0,
        this.cacheAsBitmap = !1,
        this.eatCount = 0
    }
    __extends(t, e);
    var i = (__define, t);
    return p = i.prototype,
    p.updateDisplay = function() {
        this.graphics.beginFill(this.innerColor, 1),
        this.graphics.drawCircle(0, 0, this.r),
        this.graphics.endFill(),
        this.showHoop && (this.graphics.lineStyle(2, 6526461, .3), this.graphics.drawCircle(0, 0, this.r + 10), this.graphics.endFill())
    },
    p.setShowHoop = function(e) {
        this.showHoop = e,
        this.graphics.clear(),
        this.updateDisplay()
    },
    p.notifyContact = function(e, t) {
        t ? (this.eatCount++, this.growUpByInc(e.cvtGrowth), e.remove()) : 1 == Main.game_status && (Main.game_status = 2)
    },
    p.getEatCount = function() {
        return this.eatCount
    },
    t
} (Ball);
egret.registerClass(CtrlBall, "CtrlBall");
var DynaNpcBall = function(e) {
    function t(t, i, a, s, n, o) {
        void 0 === o && (o = 0),
        e.call(this, t, i, a, s, n, o),
        this.cacheAsBitmap = !1
    }
    __extends(t, e);
    var i = (__define, t);
    return p = i.prototype,
    t.createRandomBall = function(e, i) {
        return new t(e, e, 0, i, i, 1)
    },
    p.notifyContact = function() {},
    p.remove = function() {
        this.parent && (Main.dynamicNpcBallPool.removeObject(this), this.removeAnimate(), this.parent.removeChild(this))
    },
    p.randPosAndSpeed = function(e) {
        if (void 0 === e && (e = !1), e) {
            var t = Math.random() * Main.stage_width,
            i = Math.random() * Main.stage_height,
            a = 200;
            if (t > Main.config.ctrlBallX - a && t < Main.config.ctrlBallX + a && i > Main.config.ctrlBallY - a && i < Main.config.ctrlBallY + a) {
                var s = .5 - Math.random() > 0 ? 1 : -1,
                n = .5 - Math.random() > 0 ? 1 : -1;
                t = t + s * (1 + Math.random()) * a + s * this.r * 4,
                i = i + n * (1 + Math.random()) * a + n * this.r * 4
            }
            this.x = t,
            this.y = i,
            this.v_x = Math.random() - .5,
            this.v_y = Math.random() - .5
        } else {
            var o = Math.random();.25 >= o ? (this.x = 1 - this.r, this.y = Math.random() * Main.stage_height, this.v_x = Math.random(), this.v_y = Math.random() - .5) : o > .25 && .5 >= o ? (this.x = Main.stage_width + this.r - 1, this.y = Math.random() * Main.stage_height, this.v_x = -Math.random(), this.v_y = Math.random() - .5) : o > .5 && .75 >= o ? (this.x = Math.random() * Main.stage_height, this.y = 1 - this.r, this.v_x = Math.random() - .5, this.v_y = Math.random()) : (this.x = Math.random() * Main.stage_height, this.y = Main.stage_height + this.r - 1, this.v_x = Math.random() - .5, this.v_y = -Math.random())
        }
        this.v_x *= Main.config.speedScale,
        this.v_y *= Main.config.speedScale,
        Math.abs(this.v_x) + Math.abs(this.v_y) < 1 && (this.v_x = this.v_x < 0 ? -1 : 1, this.v_y = this.v_y < 0 ? -1 : 1)
    },
    p.outOfView = function() {
        return this.x + this.r < 0 || this.x - this.r > Main.stage_width || this.y + this.r < 0 || this.y - this.r > Main.stage_height ? !0 : !1
    },
    p.move = function(e) {
        this.x += this.v_x * e / 15,
        this.y += this.v_y * e / 15
    },
    p.tick = function(e) {
        this.outOfView() ? this.remove() : this.move(e)
    },
    t
} (Ball);
egret.registerClass(DynaNpcBall, "DynaNpcBall");
var GameConfig = {
    URLHEAD: "",
    GAMEID: "eatjoy",
    CHANNEL: "huowu",
    THIS_OPENID: "",
    THIS_NICK: "我",
    APPID: "wxbfe24127e960b06d",
    SAVEKEY: "",
    title: "吃你个球",
    share_desc: "太恐怖了！！！ {0}残忍的吃掉了{1}个小球！",
    img_url: "",
    short_img_url: "resource/icon.jpg"
},
utils; !
function(e) {
    var t = function() {
        function e() {}
        var t = (__define, e);
        return p = t.prototype,
        p.getRequestUrlTail = function(e) {
            var t = [];
            for (var i in e) {
                var a = e[i];
                "sign" != i && "" != a && t.push(i + "=" + a + "&")
            }
            t.sort();
            var s = "";
            for (var i in t) s += t[i];
            var n = (new md5).hex_md5(s.substr(0, s.length - 1) + "munu-h5"),
            o = s + "sign=" + n;
            return o
        },
        p.requestData = function(e, t, i) {
            var a = new egret.HttpRequest;
            a.once(egret.Event.COMPLETE, i, null),
            a.once(egret.IOErrorEvent.IO_ERROR, i, null),
            a.open(e, egret.HttpMethod.POST),
            a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
            a.send(this.getRequestUrlTail(t))
        },
        p.authLogin = function() {
            
        },
        p.init = function() {
            this.title = GameConfig.title,
            this.desc = GameConfig.share_desc.format("xxx", 0),
            this.link = window.location.href.split("?")[0] + "?channel=" + GameConfig.CHANNEL,
            this.imgUrl = GameConfig.img_url,
            this.getSignPackage()
        },
        p.share = function(e) {
            this.desc = GameConfig.share_desc.format(decodeURIComponent(GameConfig.THIS_NICK), e),
            this.getWeiXinShareTimeline(),
            this.getWeiXinShareAppMessage(),
            this.getWeiXinShareQQ(),
            this.getWeiXinShareWeiBo()
        },
        p.getSignPackage = function() {
            var e = this,
            t = new egret.URLLoader,
            i = GameConfig.URLHEAD + "munu_h5/munu_sign.php",
            a = {
                url: encodeURIComponent(location.href.split("#")[0])
            },
            s = new egret.URLVariables;
            s.variables = a;
            var n = new egret.URLRequest(i);
            n.data = s,
            n.method = egret.URLRequestMethod.POST,
            t.load(n),
            t.addEventListener(egret.Event.COMPLETE,
            function(t) {
                var i = t.target.data,
                a = JSON.parse(i);
                void 0 != typeof a.appId && (window.wx_config = a, e.getWeiXinConfig())
            },
            this)
        },
        p.getWeiXinConfig = function() {
           
        },
        p.getWeiXinShareTimeline = function() {
         
        },
        p.getWeiXinShareAppMessage = function() {
           
        },
        p.getWeiXinShareQQ = function() {
           
        },
        p.getWeiXinShareWeiBo = function() {
          
        },
        e
    } ();
    e.JSSDK = t,
    egret.registerClass(t, "utils.JSSDK")
} (utils || (utils = {}));
var LoadingUI = function(e) {
    function t() {
        e.call(this),
        this.createView()
    }
    __extends(t, e);
    var i = (__define, t);
    return p = i.prototype,
    p.createView = function() {
        this.textField = new egret.TextField,
        this.addChild(this.textField),
        this.textField.y = 300,
        this.textField.width = 480,
        this.textField.height = 100,
        this.textField.textAlign = "center"
    },
    p.setProgress = function(e, t) {
        this.textField.text = "Loading..." + e + "/" + t
    },
    t
} (egret.Sprite);
egret.registerClass(LoadingUI, "LoadingUI");
var STATIC_NPC_BALL_MARK = 1,
DYNAMIC_NPC_BALL_MARK = 2,
CONTROL_BALL_MARK = 4,
isMobile = isMobile || {},
Main = function(e) {
    function t() {
        e.call(this),
        this.game_timer = 0,
        this.lastTime = (new Date).getTime(),
        this.lastTouchX = 0,
        this.lastTouchY = 0,
        this.ctrlBall = null,
        this.dyBallContainer = null,
        this.maxNpcBalls = 0,
        this.isWeiXinOpened = !1,
        t.instance = this,
        this.wxSDK = new utils.JSSDK,
        this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this),
        "huowu" != GameConfig.CHANNEL && (isMobile.WeiXin() ? (this.isWeiXinOpened = !0, this.wxSDK.init()) : window.mobShare.ui.init())
    }
    __extends(t, e);
    var i = (__define, t);
    return p = i.prototype,
    p.onAddToStage = function() {
        t.is_add_to_stage = !0,
        isMobile.any() && (this.stage.scaleMode = egret.StageScaleMode.FIXED_WIDTH),
        this.loadingView = new LoadingUI,
        this.stage.addChild(this.loadingView),
        RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.loadConfig("resource/default.res.json", "resource/");
        
    },
    p.onConfigComplete = function() {
        RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this),
        RES.loadGroup("preload")
    },
    p.onResourceLoadComplete = function(e) {
        "preload" == e.groupName && (this.stage.removeChild(this.loadingView), RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this), RES.removeEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this), RES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this), this.createMainMenu())
    },
    p.onResourceLoadError = function(e) {
        console.warn("Group:" + e.groupName + " has failed to load"),
        this.onResourceLoadComplete(e)
    },
    p.onResourceProgress = function(e) {
        "preload" == e.groupName && this.loadingView.setProgress(e.itemsLoaded, e.itemsTotal)
    },
    p.createMainMenu = function() {
        this.mainMenu = new egret.Sprite,
        this.mainMenu.graphics.beginFill(15395562, 1),
        this.mainMenu.graphics.drawRect(0, 0, this.stage.stageWidth, this.stage.stageHeight),
        this.mainMenu.graphics.endFill(),
        this.addChild(this.mainMenu);
        var e = [DynaNpcBall.createRandomBall(5164484, 100), DynaNpcBall.createRandomBall(11721305, 50)];
        this.mainMenu.addChild(e[0]),
        this.mainMenu.addChild(e[1]),
        e[0].x = .5 * this.stage.stageWidth - 65,
        e[0].y = .4 * this.stage.stageHeight,
        e[1].x = .5 * this.stage.stageWidth + 65,
        e[1].y = .4 * this.stage.stageHeight + 40;
        var t = 400,
        i = .1;
        egret.Tween.get(e[0], {
            loop: !0
        },
        null, !0).to({
            scaleX: 1 + i,
            scaleY: 1 + i
        },
        t).to({
            scaleX: 1 - i,
            scaleY: 1 - i
        },
        2 * t).to({
            scaleX: 1,
            scaleY: 1
        },
        t),
        egret.Tween.get(e[1], {
            loop: !0
        },
        null, !0).to({
            scaleX: 1 + i,
            scaleY: 1 + i
        },
        t).to({
            scaleX: 1 - i,
            scaleY: 1 - i
        },
        2 * t).to({
            scaleX: 1,
            scaleY: 1
        },
        t);
        var a = new egret.Bitmap,
        s = RES.getRes("start_btn_png");
        a.texture = s,
        a.x = .5 * this.stage.stageWidth - .5 * a.width,
        a.y = .72 * this.stage.stageHeight,
        this.mainMenu.addChild(a),
        a.touchEnabled = !0,
        this.mainMenu.touchEnabled = !0,
        this.mainMenu.addEventListener(egret.TouchEvent.TOUCH_TAP, this.startGame, this, !0)
    },
    p.gameOver = function() {
        t.game_status = 4,
        this.gameLayer.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onTouchBegin, this, !0),
        this.gameLayer.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.onTouchMove, this, !0),
        this.gameLayer.removeEventListener(egret.TouchEvent.TOUCH_END, this.onTouchEnd, this, !0),
        this.overLayer = new egret.Sprite,
        this.overLayer.graphics.beginFill(0, .35),
        this.overLayer.graphics.drawRect(0, 0, this.stage.stageWidth, this.stage.stageHeight),
        this.overLayer.graphics.endFill(),
        this.addChild(this.overLayer);
        var e = new egret.Bitmap;
        e.texture = RES.getRes("balance_base_bg_png"),
        e.x = .5 * this.stage.stageWidth - .5 * e.width,
        e.y = .2 * this.stage.stageHeight,
        this.overLayer.addChild(e);
        var i = this.ctrlBall.getEatCount(),
        a = new egret.TextField;
        a.text = "" + i,
        a.x = .5 * this.stage.stageWidth - .5 * a.width + 5,
        a.y = e.y + 242,
        a.bold = !0,
        a.size = 34,
        a.textColor = 16711422,
        this.overLayer.addChild(a);
        var s = new egret.TextField;
        s.text = "" + this.getBeyondValue(i),
        s.x = .5 * this.stage.stageWidth - .5 * s.width + 38,
        s.y = e.y + 348,
        s.bold = !0,
        s.size = 34,
        s.textColor = 16711422,
        this.overLayer.addChild(s);
        var n = 60,
        o = .71 * this.stage.stageHeight,
        r = new egret.Bitmap;
        r.texture = RES.getRes("again_btn_png"),
        r.x = .5 * this.stage.stageWidth - r.width - .5 * n,
        r.y = o,
        this.overLayer.addChild(r),
        r.touchEnabled = !0,
        r.addEventListener(egret.TouchEvent.TOUCH_TAP, this.reStartGame, this, !0);
        var h = new egret.Bitmap;
        h.texture = RES.getRes("share_btn_png"),
        h.x = .5 * this.stage.stageWidth + .5 * n,
        h.y = o - 2,
        this.overLayer.addChild(h),
        h.touchEnabled = !0,
        h.addEventListener(egret.TouchEvent.TOUCH_TAP, this.shareTo, this, !0);
        var l = new egret.Bitmap;
        l.texture = RES.getRes("white_line_png"),
        l.x = .5 * this.stage.stageWidth - .5 * l.width,
        l.y = h.y + h.height + 25,
        this.overLayer.addChild(l);
		dp_submitScore(i);
		document.getElementById("toolbar").style.display="block";
    },
    p.shareTo = function() {
        {
            var e = this.ctrlBall.getEatCount();
            this.getBeyondValue(e)
        }
        if ("huowu" == GameConfig.CHANNEL) dp_share();
        else if (this.isWeiXinOpened) {
            this.shareLayer = new egret.Sprite,
            this.shareLayer.graphics.beginFill(0, .8),
            this.shareLayer.graphics.drawRect(0, 0, this.stage.stageWidth, this.stage.stageHeight),
            this.shareLayer.graphics.endFill(),
            this.addChild(this.shareLayer),
            this.shareLayer.touchEnabled = !0,
            this.shareLayer.addEventListener(egret.TouchEvent.TOUCH_TAP, this.removeShareLayer, this, !0);
            var t = new egret.Bitmap;
            t.texture = RES.getRes("share_guide_png"),
            t.x = .5 * this.stage.stageWidth - .5 * t.width,
            t.y = .33 * this.stage.stageHeight - .5 * t.height,
            this.shareLayer.addChild(t);
            var i = new egret.Bitmap;
            i.texture = RES.getRes("arrow_png"),
            i.x = .5 * this.stage.stageWidth + 95,
            i.y = t.y - .5 * t.height - 40,
            this.shareLayer.addChild(i),
            this.wxSDK.share(e)
        } else window.setup_share_sdk(e),
        window.mobShare.ui.open()
    },
    p.removeShareLayer = function() {
        this.shareLayer && (this.removeChild(this.shareLayer), this.shareLayer = null)
    },
    p.startGame = function() {
        this.mainMenu.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.startGame, this, !0),
        this.removeChild(this.mainMenu),
        this.mainMenu = null,
        this.createGameScene()
    },
    p.reStartGame = function() {
        t.dynamicNpcBallPool.reset(),
        this.removeChild(this.overLayer),
        this.overLayer = null,
        null != this.gameLayer && (this.removeChild(this.gameLayer), this.gameLayer = null),
        this.createGameScene();
		document.getElementById("toolbar").style.display="none";
    },
    p.createGameScene = function() {
        this.moveMSecByDist = 2500 / this.stage.stageWidth,
        this.maxNpcBalls = Math.round(this.stage.stageWidth * this.stage.stageHeight / 1e4 / t.config.count),
        t.game_status = 1,
        t.stage_width = this.stage.stageWidth,
        t.stage_height = this.stage.stageHeight,
        t.config.ctrlBallX = .5 * t.stage_width,
        t.config.ctrlBallY = .5 * t.stage_height,
        this.game_timer = 0,
        this.gameLayer = new egret.Sprite,
        this.gameLayer.graphics.beginFill(15395562, 1),
        this.gameLayer.graphics.drawRect(0, 0, this.stage.stageWidth, this.stage.stageHeight),
        this.gameLayer.graphics.endFill(),
        this.gameLayer.touchEnabled = !0,
        this.gameLayer.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onTouchBegin, this, !0),
        this.gameLayer.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.onTouchMove, this, !0),
        this.gameLayer.addEventListener(egret.TouchEvent.TOUCH_END, this.onTouchEnd, this, !0),
        this.addChild(this.gameLayer),
        this.initBalls(),
        this.infoTextDisplay(),
        this.addEventListener(egret.Event.ENTER_FRAME, this.gameViewUpdate, this)
    },
    p.initBalls = function() {
        t.dynamicNpcBallPool = new NObjsPool,
        t.dynamicNpcBallPool.init(function() {
            var e = rand(t.config.minRadius, t.config.maxRadius, t.config.radiusInterval),
            i = t.config.colors[Math.floor(Math.random() * t.config.colors.length)];
            return DynaNpcBall.createRandomBall(i, e)
        }.bind(this), this.maxNpcBalls),
        this.dyBallContainer = new egret.Sprite,
        this.gameLayer.addChild(this.dyBallContainer),
        this.ctrlBall = new CtrlBall(5003108, t.config.playerRadius),
        this.ctrlBall.x = t.config.ctrlBallX,
        this.ctrlBall.y = t.config.ctrlBallY,
        this.ctrlBall.setBodyId(CTRL_MAIN_BALL),
        this.gameLayer.addChild(this.ctrlBall),
        this.ctrlBall.setShowHoop(!0);
        for (var e, i = 0; i < this.maxNpcBalls; i++) e = t.dynamicNpcBallPool.getObject(),
        e.randPosAndSpeed(!0),
        this.dyBallContainer.addChild(e)
    },
    p.infoTextDisplay = function() {
        this.eat_count = new egret.TextField,
        this.eat_count.x = .7 * this.stage.stageWidth,
        this.eat_count.y = 30,
        this.eat_count.textColor = 656899,
        this.eat_count.text = "个数: 0",
        this.eat_count.size = 32,
        this.addChild(this.eat_count)
    },
    p.onTimeChange = function(e) {
        this.game_timer += e;
        Math.round(this.game_timer / 1e3);
        this.eat_count.text = "个数: " + this.ctrlBall.getEatCount(),
        this.game_timer > 7e3 && this.ctrlBall.setShowHoop(!1)
    },
    p.updateDynamicBalls = function(e) {
        for (var i = t.dynamicNpcBallPool.usedList,
        a = i.length - 1; a >= 0; a--) i[a].tick(e);
        if (t.dynamicNpcBallPool.isExistIdle() && Math.random() < .25) {
            var s = t.config.minRadius,
            n = t.config.maxRadius;
            s < this.ctrlBall.r - 35 && (s = this.ctrlBall.r - 35),
            n < this.ctrlBall.r + 15 && (n = this.ctrlBall.r + 15);
            var o = rand(s, n, t.config.radiusInterval),
            r = t.dynamicNpcBallPool.getObject();
            r.growUp(o),
            r.randPosAndSpeed(!1),
            this.dyBallContainer.addChild(r)
        }
    },
    p._detectCollision = function(e) {
        for (var t, i, a, s = e.usedList,
        n = s.length,
        o = this.ctrlBall.r,
        r = 0,
        h = 2; n > r;) t = s[r],
        Math.abs(this.ctrlBall.x - t.x) <= o + t.r && Math.abs(this.ctrlBall.y - t.y) <= o + t.r && (i = o + t.r - h, a = (this.ctrlBall.x - t.x) * (this.ctrlBall.x - t.x) + (this.ctrlBall.y - t.y) * (this.ctrlBall.y - t.y), a <= Math.pow(i, 2) && (o >= t.r ? (this.ctrlBall.notifyContact(t, !0), n--) : (this.ctrlBall.notifyContact(t, !1), n--))),
        r++
    },
    p.detectCollision = function() {
        this._detectCollision(t.dynamicNpcBallPool)
    },
    p.gameViewUpdate = function() {
        if (t.game_status < 4) {
            var e = (new Date).getTime(),
            i = e - this.lastTime;
            this.lastTime = e,
            1 == t.game_status && (this.detectCollision(), this.updateDynamicBalls(i)),
            this.onTimeChange(i),
            2 == t.game_status && (t.game_status = 3, this.gameOver())
        }
    },
    p.onTouchBegin = function(e) {
        this.lastTouchX = e.localX,
        this.lastTouchY = e.localY
    },
    p.onTouchMove = function(e) {
        var t = e.localX - this.lastTouchX,
        i = e.localY - this.lastTouchY;
        this.lastTouchX = e.localX,
        this.lastTouchY = e.localY;
        var a = this.ctrlBall.x + t,
        s = this.ctrlBall.y + i;
        this.ctrlBall.x = a,
        this.ctrlBall.y = s
    },
    p.ctrlBallMoveCallBack = function() {},
    p.onTouchEnd = function() {},
    p.getBeyondValue = function(e) {
        var t = 0;
        if (0 >= e) t = 1;
        else {
            var i = 0;
            e >= 35 && (i = e - 34, t += .5 * i, e -= i),
            e >= 14 && (i = e - 13, t += i, e -= i),
            e >= 4 && (i = e - 3, t += 3 * i, e -= i),
            e > 0 && (t += 10 * e, e = 0),
            t > 99 && (t = 99)
        }
        return t
    },
    t.config = {
        ctrlBallX: 0,
        ctrlBallY: 0,
        count: 2,
        minRadius: 5,
        maxRadius: 55,
        playerRadius: 10,
        radiusInterval: 10,
        speedScale: 3,
        colors: [5164484, 13104228, 16739179, 4569007, 11721305, 14966623]
    },
    t.is_add_to_stage = !1,
    t
} (egret.DisplayObjectContainer);
egret.registerClass(Main, "Main");
var NObjsPool = function() {
    function e() {
        this.usedList = [],
        this.objMarkIndex = 0,
        this.idleList = []
    }
    var t = (__define, e);
    return p = t.prototype,
    p.init = function(e, t) {
        void 0 === t && (t = 50),
        this.$createFunc = e,
        this.cacheSize = t;
        for (var i = 0; i < this.cacheSize; i++) {
            var a = e();
            this.idleList.push(a)
        }
    },
    p.removeObject = function(e) {
        for (var t = this.usedList.length,
        i = -1,
        a = 0; t > a; a++) e.unique_mark == this.usedList[a].unique_mark && (i = a);
        i > -1 && (this.idleList.push(e), this.usedList.splice(i, 1))
    },
    p.getObject = function() {
        var e, t = this.idleList.length;
        return t > 0 ? e = this.idleList.pop() : (e = this.$createFunc(), this.cacheSize++),
        e.setUniqueMark(this.objMarkIndex),
        this.usedList.push(e),
        this.objMarkIndex++,
        e
    },
    p.isExistIdle = function() {
        return this.idleList.length > 0 ? !0 : !1
    },
    p.reset = function() {
        this.idleList = this.idleList.concat(this.usedList),
        this.usedList = []
    },
    e
} ();
egret.registerClass(NObjsPool, "NObjsPool");